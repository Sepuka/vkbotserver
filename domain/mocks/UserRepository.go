// Code generated by mockery v2.10.0. DO NOT EDIT.

package mocks

import (
	domain "github.com/sepuka/vkbotserver/domain"
	mock "github.com/stretchr/testify/mock"
)

// UserRepository is an autogenerated mock type for the UserRepository type
type UserRepository struct {
	mock.Mock
}

// Create provides a mock function with given fields: user
func (_m *UserRepository) Create(user *domain.User) error {
	ret := _m.Called(user)

	var r0 error
	if rf, ok := ret.Get(0).(func(*domain.User) error); ok {
		r0 = rf(user)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// GetByExternalId provides a mock function with given fields: auth, id
func (_m *UserRepository) GetByExternalId(auth domain.Oauth, id string) (*domain.User, error) {
	ret := _m.Called(auth, id)

	var r0 *domain.User
	if rf, ok := ret.Get(0).(func(domain.Oauth, string) *domain.User); ok {
		r0 = rf(auth, id)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*domain.User)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(domain.Oauth, string) error); ok {
		r1 = rf(auth, id)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// Update provides a mock function with given fields: user
func (_m *UserRepository) Update(user *domain.User) error {
	ret := _m.Called(user)

	var r0 error
	if rf, ok := ret.Get(0).(func(*domain.User) error); ok {
		r0 = rf(user)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}
